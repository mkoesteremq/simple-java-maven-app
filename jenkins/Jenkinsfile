pipeline {
  parameters {
    choice(
      name: "Environment",
      choices: ['staging', 'prod'],
      description : "Release Scope for basic-auth. Deployment for dev needs to be done manually ",
    )
    choice(
      name: "Version",
      choices: ['Patch', 'Minor', 'Major'],
      description : "SemVer-String",
    )
  }
  environment {
    stack_prefix = "${params.Environment == 'prod' ? 'xdn' : 'xdn-staging'}"
    stack_environment = "${params.Environment == 'prod' ? 'prod' : 'stage'}"
    builds_to_keep = "${params.Environment == 'prod' ? '5' : '1'}"
  }
  options {
    buildDiscarder(logRotator(numToKeepStr: "${env.builds_to_keep}"))
    disableConcurrentBuilds()
    skipStagesAfterUnstable()
  }
  agent {
    docker {
      image 'maven:3-alpine'
      args '-v /root/.m2:/root/.m2'
    }
  }
  stages {
    stage('Build') {
      steps {
        sh 'mvn -B -DskipTests clean package'
      }
    }
    stage('Test') {
      steps {
        sh 'mvn test -Dmaven.test.failure.ignore=true'
      }
      post {
        success {
          junit 'target/surefire-reports/*.xml'
        }
      }
    }
    stage('Deliver') {
      steps {
        script {
          def proceed = "true"
          try{
            timeout(time: 5, unit: 'SECONDS') {
              env.Version = input message: 'User input required', ok: 'Release!'
            }
          } catch (err) {
            proceed = false
            echo"scope: ${scope}"
          }
          if(proceed==true){
            echo "${env.RELEASE_SCOPE}"
            sh './jenkins/scripts/deliver.sh'
          }
        }
        echo "post"
      }
    }
  }
}
